@model ProfileViewModel
@{
    ViewData["Title"] = "Profile";
}
<head>
    <link rel="stylesheet" href="~/css/friendshiptoggle.css">
</head>
<div class="container emp-profile">
    <form>
        <div class="row">
            <div class="col-md-4">
                <section class="ppbio-bg">
                    <div class="profile-img">
                        <img src="~/default-profile-pic.png" alt="Profile picture" />
                    </div>
                    <div id="bio">
                        <p>@Model.User.FirstOrDefault().Bio</p>
                    </div>
                </section>
            </div>
            <div class="col-md-7">
                <section class="content-bg">
                    <div class="profile-head">

                        <h5 id="profile-name">
                            @Model.User.FirstOrDefault().Name
                        </h5>

                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="timeline-tab" data-toggle="tab" href="#timeline" role="tab" aria-controls="timeline" aria-selected="true">Timeline</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="about-tab" data-toggle="tab" href="#about" role="tab" aria-controls="about" aria-selected="false">About</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="friends-tab" data-toggle="tab" href="#friends" role="tab" aria-controls="friends" aria-selected="false">Friends</a>
                            </li>
                            @if (Model.Friends.Any(u => u.UserID == Model.CurrentUserID))
                            {
                                <li class="nav-item ml-auto">
                                    <span id="friend-status">We're friends!</span>
                                </li>
                                <li class="nav-item">
                                    <label class="heart-switch">
                                        <input type="checkbox" checked>
                                        <svg viewBox="0 0 33 23" fill="white">
                                            <path d="M23.5,0.5 C28.4705627,0.5 32.5,4.52943725 32.5,9.5 C32.5,16.9484448 21.46672,22.5 16.5,22.5 C11.53328,22.5 0.5,16.9484448 0.5,9.5 C0.5,4.52952206 4.52943725,0.5 9.5,0.5 C12.3277083,0.5 14.8508336,1.80407476 16.5007741,3.84362242 C18.1491664,1.80407476 20.6722917,0.5 23.5,0.5 Z"></path>
                                        </svg>
                                    </label>
                                </li>
                            }
                            else
                            {
                                <li class="nav-item ml-auto">
                                    <span id="friend-status">Add me!</span>
                                </li>
                                <li class="nav-item">
                                    <label class="heart-switch">
                                        <input type="checkbox">
                                        <svg viewBox="0 0 33 23" fill="white">
                                            <path d="M23.5,0.5 C28.4705627,0.5 32.5,4.52943725 32.5,9.5 C32.5,16.9484448 21.46672,22.5 16.5,22.5 C11.53328,22.5 0.5,16.9484448 0.5,9.5 C0.5,4.52952206 4.52943725,0.5 9.5,0.5 C12.3277083,0.5 14.8508336,1.80407476 16.5007741,3.84362242 C18.1491664,1.80407476 20.6722917,0.5 23.5,0.5 Z"></path>
                                        </svg>
                                    </label>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="col-auto">
                        <div class="tab-content profile-tab" id="myTabContent">
                            <div class="tab-pane fade show active" id="timeline" role="tabpanel" aria-labelledby="timeline-tab">
                                <div class="posts">

                                </div>
                                <div class="col-auto col-md-12">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="Posts" placeholder="Post..."></>
                                            <button id="postbtn" class="btn btn-primary shadow-none float-right" disabled>SEND</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="about" role="tabpanel" aria-labelledby="about-tab">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Email</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p id="email">@Model.User.FirstOrDefault().Email</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <label>Phone</label>
                                    </div>
                                    <div class="col-md-6">
                                        <p id="phone">@Model.User.FirstOrDefault().Phone</p>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="friends" role="tabpanel" aria-labelledby="friends-tab">
                                <div class="row">
                                    @foreach (var item in Model.Friends)
                                    {
                                        if (item.Name != Model.User.FirstOrDefault().Name)
                                        {
                                            <div class="card" style="width: 10rem;">
                                                <a href="/getProfile/@item.UserID">
                                                    <img id="cardPicture" class="card-img-top" src="~/default-profile-pic.png" alt="Card profile picture">
                                                </a>
                                                <div class="card-body">
                                                    <h5 class="card-title">
                                                        <a href="/getProfile/@item.UserID"> @Html.DisplayFor(modelItem => item.Name) </a>
                                                    </h5>
                                                    <p class="card-text">@Html.DisplayFor(modelItem => item.Bio)</p>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            getProfile();

            if ($("#email").text() == "@User.Identity.Name") {
                $(".heart-switch").remove(); 
                $("#friend-status").remove();
            }

            $("#postbtn").click(function (event) {
                event.preventDefault(); //disable button auto-refresh
                $.when(postPost()).then(createPostHTML(true));
            })

            //enable post button when text is entered
            $("#Posts").on("input", function (){
                if ($("#Posts").val() != "") {
                    $("#postbtn").css("background-color", "#e84a5f");
                    $("#postbtn").prop("disabled", false);
                } else {
                    $("#postbtn").css("background-color", "#2d2d2d");
                    $("#postbtn").prop("disabled", true);
                }
            });

            //save active tab
            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                localStorage.setItem('activeTab', $(e.target).attr('href'));
            });

            //select last active tab
            var activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                $('.nav-tabs a[href="' + activeTab + '"]').tab('show');
            }

            $.ajax({
                type: 'GET',
                url: '../api/UserEntities/getUsername',
                success: function (result) {
                    $("#user-button").text("Hello, " + result + "!");
                }
            });

            //add/remove friend
            $("form").on("change", ":checkbox", function () {
                $.ajax({
                    type: 'GET',
                    url: '../../api/UserEntities/getUserID',
                    success: function (result) {
                        addOrRemoveFriend(result);
                    }
                });
            });
        });

        function addOrRemoveFriend(userid) {
            var data = {
                Friend1ID: userid,
                Friend2ID: window.location.pathname.split("/").pop() //last part of url, which is the user id of any given profile
            };

            if ($(":checkbox").is(':checked')) {
                $("#friend-status").text("We're friends!");
                
                $.ajax({
                    type: 'POST',
                    url: '../../api/UserEntities/addFriend',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                });
            } else {
                $("#friend-status").text("Add me!");

                $.ajax({
                    type: 'POST',
                    url: '../../api/UserEntities/removeFriend',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                });
            }
        }

        function getProfile() {
            var data = {
                UserID: $("#user-button").attr('href').substring(12)
            };

            $.ajax({
                type: 'POST',
                url: '../../api/UserEntities/getProfile',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(data),
                success: function (result) {
                    createPostHTML(false, result[1]);
                    createFriendsHTML(result[2]);
                }
            });
        }

        function postPost() {
            var data = {
                Content: $("#Posts").val()
            };

            return $.ajax({
                type: 'POST',
                url: '../../api/UserEntities/postOnTimeline',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(data)
            });
        }

        function createPostHTML(getLatest, PostList) {
            if (getLatest == true) {
                var postHTML = '<section class="post-section">' +
                    '<div class="col-md-3">' +
                    '<label id="author"><b>' + $("#profile-name").text() + '</b></label>' +
                    '<p id="content">' + $("#Posts").val() + '</p>' +
                    '</div>' +
                    '<hr />' +
                    '   ' +
                    '</section>';

                $(".posts").after(postHTML);

            } else {
                $.each(PostList, function (index, value) {
                    console.log(value.authorID);
                    var postHTML = '<section class="post-section">' +
                        '<div class="col-md-3">' +
                        '<label id="author"><b><a href="/getProfile/' + value.authorID + '">' + value.author + '</a></b></label>' +
                        '<p id="content">' + value.content + '</p>' +
                        '</div>' +
                        '<hr />' +
                        '   ' +
                        '</section>';

                    $(".posts").after(postHTML);
                });
            }
        }

        function createFriendsHTML(Friendslists) {
            if (getLatest == true) {
                //on add friend switch

            } else {
                $.each(Friendslists, function (index, value) {
                    var postHTML = '<section class="post-section">' +
                        '<div class="col-md-3">' +
                        '<label id="author"><b>' + value.author + '</b></label>' +
                        '<p id="content">' + value.content + '</p>' +
                        '</div>' +
                        '<hr />' +
                        '   ' +
                        '</section>';

                    $(".posts").after(postHTML);
                });
            }
        }

    </script>
}